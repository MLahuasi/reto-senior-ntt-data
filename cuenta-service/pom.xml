<?xml version="1.0" encoding="UTF-8"?>
<project 
    xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                        https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.5</version>    <!-- compatible con Java 17 -->
    <relativePath/>
  </parent>

  <groupId>com.jmlq</groupId>
  <artifactId>cuenta-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>cuenta-service</name>
  <description>Demo project for Spring Boot</description>

  <!-- Propiedades centrales para versiones -->
  <properties>
    <java.version>17</java.version>                       <!-- release target -->
    <lombok.version>1.18.28</lombok.version>              <!-- versión de Lombok -->
    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    <surefire-plugin.version>3.0.0-M8</surefire-plugin.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- 1) REST + JSON -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- 2) JPA para mapeo objeto-relacional -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- 3) Validación de beans (@Valid) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- 4) Cliente RabbitMQ para comunicación asíncrona -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-amqp</artifactId>
    </dependency>

    <!-- 5) Driver PostgreSQL (scope runtime) -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- 6) Lombok: reduce boilerplate de getters/setters -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- OpenAPI / Swagger UI -->
    <!-- SpringDoc OpenAPI starter (Swagger UI) -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>2.2.0</version>
    </dependency>

    <!-- 8) Testing: JUnit, Mockito, Spring Test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Mapeo DTOS y Enitidades -->
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>1.5.5.Final</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>1.5.5.Final</version>
      <scope>provided</scope>
    </dependency>
           
        
  </dependencies>

  <build>
    <plugins>
      <!-- A) Compiler plugin: define release 17 y processor de Lombok -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <!-- target bytecode Java 17 -->
          <release>${java.version}</release>
          <!-- ruta al annotation processor de Lombok -->
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- B) Spring Boot Maven Plugin (empaquetado jar ejecutable) -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!-- no necesita versión: la hereda del parent -->
        <configuration>
          <excludes>
            <!-- excluimos Lombok del jar final -->
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- C) Surefire plugin para ejecución de tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <!-- Aquí puedes afinar includes/excludes de tests -->
        </configuration>
      </plugin>

      <!-- Mapeo DTOs con Entidades -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>1.5.5.Final</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      
    </plugins>
  </build>

</project>
